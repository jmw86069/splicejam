% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jambio-gg.R
\name{plotSashimi}
\alias{plotSashimi}
\title{Jam Sashimi plot}
\usage{
plotSashimi(
  sashimi,
  show = c("coverage", "junction", "junctionLabels"),
  coord_method = c("scale", "coord", "none"),
  exonsGrl = NULL,
  junc_color = jamba::alpha2col("goldenrod2", 0.3),
  junc_fill = jamba::alpha2col("goldenrod2", 0.9),
  junc_alpha = 0.8,
  junc_accuracy = 1,
  junc_nudge_pct = 0.05,
  fill_scheme = c("sample_id", "exon"),
  color_sub = NULL,
  ylabel = "read depth",
  xlabel = NULL,
  xlabel_ref = TRUE,
  use_jam_themes = TRUE,
  apply_facet = TRUE,
  facet_scales = "free_y",
  ref2c = NULL,
  label_coords = NULL,
  do_highlight = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{sashimi}{Sashimi data prepared by \code{prepareSashimi()} which
is a \code{list} with \code{covDF} coverage data in data.frame format,
\code{juncDF} junction data in data.frame format,
\code{juncLabelDF} junction label coordinates in data.frame format,
\code{exonLabelDF} exon label coordinates per coverage polygon in
data.frame format,
\code{ref2c} list output from \code{make_ref2compressed()} to
transform genomic coordinates.}

\item{show}{character vector of Sashimi plot features to include:
\code{"coverage"} sequence read coverage data;
\code{"junction"} splice junction read data.}

\item{coord_method}{character value indicating the type of
coordinate scaling to use:
\code{"scale"} uses \code{ggplot2::scale_x_continuous()};
\code{"coord"} uses \code{ggplot2::coord_trans()};
\code{"none"} does not compress genomic coordinates.}

\item{exonsGrl}{GRangesList object with one or more gene or
transcript exon models, where exons are disjoint (not
overlapping.)}

\item{junc_color, junc_fill}{character string with valid R color,
used for junction outline, and fill, for the junction arc
polygon. Alpha transparency is recommended for \code{junc_fill}
so overlapping junction arcs are visible.}

\item{junc_alpha}{numeric value between 0 and 1, to define the
alpha transparency used for junction colors, where 0 is
fully transparent, and 1 is completely non-transparent.}

\item{junc_nudge_pct}{\code{numeric} value to nudge junction labels
by the percent of the maximum y-axis junction label position.
\itemize{
\item The default \code{junc_nudge_pct=0.05} nudges labels up by 5\%,
which makes them consistently appear above the top edge of
the junction ribbon.
\item Negative values will place labels just below the top edge of
the junction ribbon.
\item A vector can be supplied to nudge each junction label
individually, applied in order the labels appear from
left to right.
\item Note that when the distance from label to the top edge
of the ribbon exceeds a threshold, a line segment is drawn
from the label to the top edge of the junction ribbon.
This threshold is controlled by
\code{ggrepel::geom_text_repel(..., min.segment.length=0.5)} and
is not configurable at this time.
}}

\item{fill_scheme}{character string for how the exon coverages
will be color-filled: \code{"exon"} will define colors for each
distinct exon, using the GRanges names from \code{flatExonsByGene};
\code{"sample_id"} to color all exons the same by sample_id.}

\item{color_sub}{optional character vector of R compatible colors
or hex strings, whose names are used to color or fill features
in the ggplot object. For example, if \code{fill_sheme="sample_id"}
the \code{color_sub} should have names for each \code{"sample_id"} value.
If any values are missing, they will be filled in using
\code{colorjam::rainbowJam()}.}

\item{ylabel}{character string used as the y-axis label, by default
\code{"score"} reflects the coverage score and junction score,
respectively for coverage and junction data. Scores are
also adjusted using the \code{scale_factor} value for each
\code{sample_id} as defined in the \code{filesDF}. Set to \code{NULL} to
hide the y-axis label completely.}

\item{xlabel}{character string used to define the x-axis name,
which takes priority over argument \code{xlabel_ref}. When
\code{xlabel} is \code{NULL} and \code{xlabel_ref} is \code{FALSE}, then the
x-axis name is \code{""}, which displays no x-axis label.}

\item{xlabel_ref}{logical indicating whether the x-axis name
should be determined by the reference (chromosome).}

\item{use_jam_themes}{logical indicating whether to apply
\code{colorjam::theme_jam()}, by default for the ggplot theme.}

\item{apply_facet}{logical indicating whether to apply
\code{ggplot2::facet_wrap()} with \code{"~sample_id"} defining each
panel.}

\item{facet_scales}{character value used as \code{"scales"} argument in
\code{ggplot2::facet_wrap()} when \code{apply_facet=TRUE}.}

\item{ref2c}{optional output from \code{make_ref2compressed()} used to
compress axis coordinates during junction arc calculations.}

\item{label_coords}{numeric vector length 2, optional range of
genomic coordinates to restrict labels, so labels are not
arranged by \code{ggrepel::geom_text_repel()} even when \code{coord_cartesian()}
is used to zoom into a specific x-axis range.}

\item{verbose}{logical indicating whether to print verbose output.}

\item{...}{additional arguments are sent to \code{grl2df()}.}
}
\description{
Jam Sashimi plot
}
\details{
This function uses Sashimi data prepared by \code{prepareSashimi()}
and creates a ggplot graphical object ready for visualization.
As a result, this function provides several arguments to
customize the visualization.
}
\examples{
suppressPackageStartupMessages(library(GenomicRanges));
data(test_exon_gr);
data(test_junc_gr);
data(test_cov_gr);
filesDF <- data.frame(url="sample_A",
   type="coverage_gr",
   sample_id="sample_A");
sh1 <- prepareSashimi(GRangesList(TestGene1=test_exon_gr),
   filesDF=filesDF,
   gene="TestGene1",
   covGR=test_cov_gr,
   juncGR=test_junc_gr);
plotSashimi(sh1);

}
\seealso{
Other jam plot functions: 
\code{\link{bgaPlotly3d}()},
\code{\link{factor2label}()},
\code{\link{gene2gg}()},
\code{\link{grl2df}()},
\code{\link{jitter_norm}()},
\code{\link{prepareSashimi}()},
\code{\link{stackJunctions}()}

Other jam ggplot2 functions: 
\code{\link{gene2gg}()},
\code{\link{geom_diagonal_wide_arc}()},
\code{\link{splicejam-extensions}},
\code{\link{to_basic.GeomShape}()}

Other splicejam core functions: 
\code{\link{exoncov2polygon}()},
\code{\link{gene2gg}()},
\code{\link{grl2df}()},
\code{\link{make_ref2compressed}()},
\code{\link{prepareSashimi}()}
}
\concept{jam ggplot2 functions}
\concept{jam plot functions}
\concept{splicejam core functions}
